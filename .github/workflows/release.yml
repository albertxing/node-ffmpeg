name: Release

on:
  workflow_dispatch:
  release:
    types: [created]

jobs:
  build-mac-x64:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Cache ffmpeg build
        id: cache-ffmpeg
        uses: actions/cache@v3
        with:
          path: src
          key: ${{ runner.os }}-x64-ffmpeg-${{ hashFiles('src/libffmpeg/*', 'src/libffmpeg/ffmpeg/RELEASE') }}

      - if: ${{ steps.cache-ffmpeg.outputs.cache-hit != 'true' }}
        name: Build ffmpeg & libffmpeg
        working-directory: ./src/libffmpeg/ffmpeg
        run: |
          brew install automake shtool texi2html wget nasm
          ./configure
          make -j4
          cd ..
          make libffmpeg.a

      - name: npm
        run: |
          npm i --ignore-scripts

      - name: Prebuild
        run: npx prebuildify --napi --strip

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: prebuild-mac-x64
          path: prebuilds

  build-mac-arm64:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Cache ffmpeg build
        id: cache-ffmpeg
        uses: actions/cache@v3
        with:
          path: src
          key: ${{ runner.os }}-arm64-ffmpeg-${{ hashFiles('src/libffmpeg/*', 'src/libffmpeg/ffmpeg/RELEASE') }}

      - if: ${{ steps.cache-ffmpeg.outputs.cache-hit != 'true' }}
        name: Build ffmpeg & libffmpeg
        working-directory: ./src/libffmpeg/ffmpeg
        run: |
          brew install automake shtool texi2html wget nasm
          ./configure --arch=arm64 --target-os=darwin --enable-cross-compile --cc=/usr/bin/clang --extra-cflags="-target arm64-apple-macos11" --extra-ldflags="-target arm64-apple-macos11"
          make -j4
          cd ..
          make CCFLAGS="-target arm64-apple-macos11" libffmpeg.a

      - name: npm
        run: |
          npm i --ignore-scripts

      - name: Prebuild
        run: npx prebuildify --napi --arch arm64 --strip

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: prebuild-mac-arm64
          path: prebuilds

  build-win-x64:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      
      - uses: msys2/setup-msys2@v2
        with:
          msystem: MSYS
          path-type: inherit
          release: false
          install: >-
            make
            pkgconf
            diffutils
            nasm
      
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      
      - name: Cache ffmpeg build
        id: cache-ffmpeg
        uses: actions/cache@v3
        with:
          path: src
          key: ${{ runner.os }}-x64-ffmpeg-${{ hashFiles('src/libffmpeg/*', 'src/libffmpeg/win/*', 'src/libffmpeg/ffmpeg/RELEASE') }}
          
      - if: ${{ steps.cache-ffmpeg.outputs.cache-hit != 'true' }}
        name: Build ffmpeg & libffmpeg
        working-directory: ./src/libffmpeg
        run: |
          call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" x64
          msys2 -c "./win/build.sh"
        shell: cmd

      - name: npm
        run: |
          npm i --ignore-scripts

      - name: Prebuild
        run: npx prebuildify --napi --strip
        shell: cmd

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: prebuild-win-x64
          path: prebuilds
          
  release:
    needs: [build-mac-x64, build-mac-arm64, build-win-x64]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          registry-url: 'https://registry.npmjs.org'
      - uses: actions/download-artifact@v3
        with:
          name: prebuild-mac-x64
          path: prebuilds
      - uses: actions/download-artifact@v3
        with:
          name: prebuild-mac-arm64
          path: prebuilds
      - uses: actions/download-artifact@v3
        with:
          name: prebuild-win-x64
          path: prebuilds
      - name: npm publish
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
